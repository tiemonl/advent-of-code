#!/bin/bash

usage() {
  echo "Usage: puzzle <year> <day> [<type1> <type2>]
  <year> - 4-digit number denoting the year of the puzzle
  <day> - number denoting the day of the puzzle, [1; 31]
  <type1> - return type for the solution of the first part of the puzzle, default - Any
  <type2> - return type for the solution of the second part of the puzzle, default - Any"
}

getinput() {
  local folder=input/$YEAR/main/
  if [[ ! -d $folder ]]; then
    mkdir -p "$folder"
  fi
  if [[ -f $folder/input$DAY.in ]] && [[ -s $folder/input$DAY.in ]]; then
    echo "Input already exists; skipping..."
  elif [[ -f .secret ]]; then
    echo "Fetching input data"
    curl -b session=$(cat .secret) https://adventofcode.com/$YEAR/day/$DAY/input > $folder/input$DAY.in
  else
    echo "Opening input file for editing"
    "${EDITOR:-vim}" $folder/input$DAY.in
  fi
}

invalidparam() {
  echo "$1"
  usage
  exit 1
}

if [[ -z $1 || -n $1 && -z $2 || -n $3 && -z $4  ]]; then
  usage
  exit 1
fi

YEAR=$1
DAY=$2
TYPE1=${3:-Any}
TYPE2=${4:-Any}

[[ $YEAR =~ ^[0-9]{4}$ ]] || invalidparam "Invalid year."
[[ $DAY =~ ^[1-9][0-9]?$ ]] || invalidparam "Invalid day."

echo "Creating puzzle for Year $YEAR, Day $DAY..."
source tools/createpuzzlefile

createpuzzlefile $YEAR $DAY $TYPE1 $TYPE2
if [[ $? -eq 0 ]]; then
  getinput
  source tools/createtestfiles
  createtestfile $YEAR $DAY $TYPE1 $TYPE2
  echo "All done! Happy coding!"
fi