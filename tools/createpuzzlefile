#!/bin/bash

createpuzzlefile() {
  local year=$1
  local day=$2
  local paddedDay=$(printf "%02d" $day)
  local type1=${3:-Int}
  local type2=${4:-Int}
  local package="dev.garlicbread.aoc"

  if [[ -z $year || -z $day ]]; then
    echo "Missing params."
    exit 1
  fi

  local puzzledir="src/main/kotlin/dev/garlicbread/aoc/y$year/"
  if [[ ! -e "$puzzledir" ]]; then
    mkdir "$puzzledir"
  fi

  local file="${puzzledir}Problem$paddedDay.kt"
  if [[ -e $file ]]; then
    read -p "File exists: ${file}. Overwrite? (y/N) " -r overwrite
    [[ "$overwrite" =~ ^[yY]$ ]] || return 0
  fi

  echo "Creating puzzle class: $file"
  echo "package $package.y$year

import ${package}.Puzzle
import ${package}.solve

fun main() = solve(
    benchmark = false
) { Problem${paddedDay}() }

class Problem${paddedDay} : Puzzle<${type1}, ${type2}>(
    year = $year,
    day = $day
) {
    override val input = rawInput

    override fun solvePartOne(): ${type1} {
        return 0
    }

    override fun solvePartTwo(): ${type2} {
        return 0
    }
}" >"${file}"

  return $?
}